#!/usr/bin/env bash
# task you need to configure web-02 to be identical to web-01

# Updating Packages before performing installations
sudo apt-get update
sudo apt-get install -y nginx

# Give the user ownership to website files for easy editing
if [ -d "/var/www" ]; then
	sudo chown -R "$USER":"$USER" /var/www
	sudo chmod -R 755 /var/www
else
	sudo mkdir -p /var/www
	sudo chown -R "$USER":"$USER" /var/www
	sudo chmod -R 755 /var/www
fi

# create directories if not present
for dir in /var/www/{html,error}; do
	if ! [ -d "$dir" ]; then
		mkdir -p "$dir"
	fi
done

# Creating an index.html page
echo "Hello World!" | sudo tee /var/www/html/index.html

# Performing a "moved permanently redirection" (301)
new_string="server_name _;\n\trewrite ^\/redirect_me https:\/\/github.com\/besthor permanent;"
sudo sed -i "s/server_name _;/$new_string/" /etc/nginx/sites-enabled/default

# Creating a 404 Custom error page
echo "Ceci n'est pas une page" | sudo tee /var/www/html/404.html
new_string="listen 80 default_server;\n\terror_page 404 \/404.html;\n\tlocation = \/404.html {\n\t\troot \/var\/www\/html;\n\t\tinternal;\n\t}"

sudo sed -i "s/listen 80 default_server;/$new_string/" /etc/nginx/sites-enabled/default

# Creating an HTTP response header
sudo sed -i "/server_name _/a add_header X-Served-By $HOSTNAME;" /etc/nginx/sites-enabled/default

# Testing configurations for syntax errors
sudo nginx -t

# Restart nginx after implementing changes
sudo service nginx restart
